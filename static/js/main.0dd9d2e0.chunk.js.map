{"version":3,"sources":["components/navbar.js","components/form.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","placeholder","Textfom","_useState","useState","_useState2","_slicedToArray","Text","setText","style","color","heading","value","onChange","event","console","log","target","rows","backgroundColor","newtext","toUpperCase","toLowerCase","text","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setmode","body","Textform","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.0dd9d2e0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { a } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props){\r\n    return (\r\n        <>\r\n          <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n              <a className=\"navbar-brand\" href=\"#\">TextUtils APP</a>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-a active\" aria-current=\"page\" href=\"/\" >Home</a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    {/* <a className=\"nav-a\" href=\"/about\">About</a> */}\r\n                  </li>\r\n                </ul>\r\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Dark Mode</label>\r\n                </div>\r\n                <form className=\"d-flex\" role=\"search\">\r\n                  <input className=\"form-control me-2 mx-4\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                  <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </>\r\n            \r\n      );\r\n}","\r\nimport React from 'react'\r\nimport { useState } from 'react';\r\n export default function Textfom(props){\r\n\r\n    const [Text, setText] = useState('');\r\n\r\n    const handlechange =(event)=>{\r\n        console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleupclick = ()=>{\r\n        let newtext = Text.toUpperCase();\r\n        setText(newtext);\r\n        console.log(\"upper clicked\");\r\n    }\r\n    const handledownclick = ()=>{\r\n        let newtext = Text.toLowerCase();\r\n        setText(newtext);\r\n        console.log(\"upper clicked\");\r\n    }\r\n    const handleclearclick = ()=>{\r\n        setText(\"\");\r\n        console.log(\"upper clicked\");\r\n    }\r\n\r\n    const handlecopyclick = ()=>{\r\n        var text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n    const handleextraspclick = ()=>{\r\n        let newtext=Text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <>\r\n            <h1 style={{color:props.mode==='light'?'black':'white'}}>{props.heading}</h1>\r\n            <div className=\"mb-3\" >\r\n                \r\n                <textarea className=\"form-control\" value={Text} id=\"mybox\" onChange={handlechange} rows=\"8\" placeholder='enter your text here' style={{backgroundColor:props.mode==='light'?'white':'grey'}}></textarea>\r\n            </div>\r\n            <button className='btn btn-primary' onClick={handleupclick} >convert to uppercase</button>\r\n            <button className='btn btn-primary mx-1' onClick={handledownclick} >convert to lowercase</button>\r\n            <button className='btn btn-primary mx-1' onClick={handleclearclick} >Clear Text</button>\r\n            <button className='btn btn-primary mx-1' onClick={handlecopyclick} >Copy Text</button>\r\n            <button className='btn btn-primary mx-1' onClick={handleextraspclick} >Remove extra space</button>\r\n\r\n            <div className=\"container my-4\" style={{color:props.mode==='light'?'black':'white'}}>\r\n                <h1>YOUR TEXT SUMMARY </h1>\r\n                <p >{Text.split(\" \").length} words {Text.length} character </p>\r\n                <p>{0.008 * Text.split(\" \").length} minutes to read</p>\r\n\r\n                <h2>Preview</h2>\r\n                <p>{Text.length>0 ?Text:\"enter something into textbox to preview here\"}</p>\r\n            </div>\r\n        </>\r\n    );\r\n }","// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport Navbar from './components/navbar';\nimport Textform from './components/form';\n// import About from './components/about';\nimport { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const[mode,setmode] = useState('light')\n  const toggleMode =()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='#120806';\n    }else{\n      setmode('light')\n      document.body.style.backgroundColor='white';\n    }\n  }\n  return(\n    <>\n      {/* <Router> */}\n        <Navbar mode={mode} toggleMode={toggleMode}/>\n        {/* <div className=\"container\">\n          <Routes>\n            <Route exact path=\"/about\" element={<About />}/>\n            <Route exact path=\"/\" element={<Textform heading = \"Enter the text to analyze\" mode={mode}/>} />\n          </Routes>\n        </div>\n      </Router> */}\n      <div className=\"container\">\n      < Textform heading = \"Enter the text to analyze\" mode={mode}/>\n\n      </div>\n      \n    </>\n    \n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nreportWebVitals(console.log);\n"],"sourceRoot":""}