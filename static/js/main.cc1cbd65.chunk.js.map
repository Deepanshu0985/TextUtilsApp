{"version":3,"sources":["components/navbar.js","components/form.js","components/about.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","Link","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","placeholder","Textfom","_useState","useState","_useState2","_slicedToArray","Text","setText","style","color","heading","value","onChange","event","console","log","target","rows","backgroundColor","newtext","toUpperCase","toLowerCase","text","document","getElementById","select","navigator","clipboard","writeText","split","join","length","About","data-bs-parent","App","setmode","Router","body","Routes","Route","exact","path","element","Textform","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.cc1cbd65.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props){\r\n    return (\r\n        <>\r\n          <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n              <Link className=\"navbar-brand\" to=\"/\">TextUtils APP</Link>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                  </li>\r\n                </ul>\r\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Dark Mode</label>\r\n                </div>\r\n                <form className=\"d-flex\" role=\"search\">\r\n                  <input className=\"form-control me-2 mx-4\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                  <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </>\r\n            \r\n      );\r\n}","\r\nimport React from 'react'\r\nimport { useState } from 'react';\r\n export default function Textfom(props){\r\n\r\n    const [Text, setText] = useState('');\r\n\r\n    const handlechange =(event)=>{\r\n        console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleupclick = ()=>{\r\n        let newtext = Text.toUpperCase();\r\n        setText(newtext);\r\n        console.log(\"upper clicked\");\r\n    }\r\n    const handledownclick = ()=>{\r\n        let newtext = Text.toLowerCase();\r\n        setText(newtext);\r\n        console.log(\"upper clicked\");\r\n    }\r\n    const handleclearclick = ()=>{\r\n        setText(\"\");\r\n        console.log(\"upper clicked\");\r\n    }\r\n\r\n    const handlecopyclick = ()=>{\r\n        var text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n    const handleextraspclick = ()=>{\r\n        let newtext=Text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <>\r\n            <h1 style={{color:props.mode==='light'?'black':'white'}}>{props.heading}</h1>\r\n            <div className=\"mb-3\" >\r\n                \r\n                <textarea className=\"form-control\" value={Text} id=\"mybox\" onChange={handlechange} rows=\"8\" placeholder='enter your text here' style={{backgroundColor:props.mode==='light'?'white':'grey'}}></textarea>\r\n            </div>\r\n            <button className='btn btn-primary' onClick={handleupclick} >convert to uppercase</button>\r\n            <button className='btn btn-primary mx-1' onClick={handledownclick} >convert to lowercase</button>\r\n            <button className='btn btn-primary mx-1' onClick={handleclearclick} >Clear Text</button>\r\n            <button className='btn btn-primary mx-1' onClick={handlecopyclick} >Copy Text</button>\r\n            <button className='btn btn-primary mx-1' onClick={handleextraspclick} >Remove extra space</button>\r\n\r\n            <div className=\"container my-4\" style={{color:props.mode==='light'?'black':'white'}}>\r\n                <h1>YOUR TEXT SUMMARY </h1>\r\n                <p >{Text.split(\" \").length} words {Text.length} character </p>\r\n                <p>{0.008 * Text.split(\" \").length} minutes to read</p>\r\n\r\n                <h2>Preview</h2>\r\n                <p>{Text.length>0 ?Text:\"enter something into textbox to preview here\"}</p>\r\n            </div>\r\n        </>\r\n    );\r\n }","import React from 'react'\r\n\r\nexport default function About(){\r\n    return (\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\">\r\n                <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    Accordion Item #1\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n            </div>\r\n            </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Accordion Item #2\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    Accordion Item #3\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport Navbar from './components/navbar';\nimport Textform from './components/form';\nimport About from './components/about';\nimport { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const[mode,setmode] = useState('light')\n  const toggleMode =()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='#120806';\n    }else{\n      setmode('light')\n      document.body.style.backgroundColor='white';\n    }\n  }\n  return(\n    <>\n      <Router>\n        <Navbar mode={mode} toggleMode={toggleMode}/>\n        <div className=\"container\">\n          <Routes>\n            <Route exact path=\"/about\" element={<About />}/>\n            <Route exact path=\"/\" element={<Textform heading = \"Enter the text to analyze\" mode={mode}/>} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n    \n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nreportWebVitals(console.log);\n"],"sourceRoot":""}